// CSS Flex Grid Framework

@mixin make-shell($gutter: 30px) {
  margin-right: auto;
  margin-left: auto;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
}

@mixin make-range($gutter: 30px) {
  margin-left: ceil(($gutter / -2));
  margin-right: floor(($gutter / -2));
}

@mixin make-cell-spacing($gutter: 30px) {
  padding-left: ceil(($gutter / 2));
  padding-right: floor(($gutter / 2));
}

@mixin make-cell($resolution, $count: 12) {
  .col-#{$resolution}-preffix-0 {
    margin-left: 0%;
  }

  @for $i from 1 through $count {
    .col-#{$resolution}-#{$i} {
      @include flex-basis(percentage($i / $count) - 0.085%);
    }

    .col-#{$resolution}-preffix-#{$i} {
      margin-left: percentage($i / $count);
    }

    .col-#{$resolution}-push-#{$i} {
      @include order($i);
    }
  }

  .col-#{$resolution}-1-5 {
    @include flex-basis(percentage(0.2));
  }
}

@mixin make-fallback($resolution, $count: 12) {
  @for $i from 1 through $count {
    .col-xs-#{$i}{
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count) - 0.085%;
    }
  }

  .col-xs-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-sm-#{$i}{
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count) - 0.085%;
    }
  }

  .col-sm-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-md-#{$i}{
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count) - 0.085%;
    }
  }

  .col-md-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-lg-#{$i} {
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count) - 0.085%;
    }
  }

  .col-lg-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-xl-#{$i} {
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count) - 0.085%;
    }
  }

  .col-xl-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  @for $i from 1 through $count {
    .col-xxl-#{$i} {
      margin-left: auto;
      margin-right: auto;
      max-width: percentage($i / $count) - 0.085%;
    }
  }

  .col-xxl-1-5{
    margin-left: auto;
    margin-right: auto;
    max-width: percentage(0.2);
  }

  [class*="cell-xs-preffix-"],
  [class*="cell-sm-preffix-"],
  [class*="cell-md-preffix-"],
  [class*="cell-lg-preffix-"],
  [class*="cell-xl-preffix-"],
  [class*="cell-xxl-preffix-"]{
    margin-left: auto;
  }
}

@mixin make-grid-system($resolution, $cell-count) {
  .row-#{$resolution}-center {
    @include justify-content(center);
  }

  .row-#{$resolution}-left {
    @include justify-content(flex-start);
  }

  .row-#{$resolution}-right {
    @include justify-content(flex-end);
  }

  .row-#{$resolution}-justify {
    @include justify-content(space-between);
  }

  .row-#{$resolution}-around {
    @include justify-content(space-around);
  }

  .row-#{$resolution}-top {
    @include align-items(flex-start);
  }

  .row-#{$resolution} {
    @include flex-direction(row);
  }

  .row-#{$resolution}-reverse {
    @include flex-direction(row-reverse);
  }

  .row-#{$resolution}-middle {
    @include align-items(center);
  }

  .row-#{$resolution}-bottom {
    @include align-items(flex-end);
  }

  .col-#{$resolution}-top {
    @include align-self(flex-start);
  }

  .col-#{$resolution}-middle {
    @include align-self(center);
  }

  .col-#{$resolution}-bottom {
    @include align-self(flex-end);
  }

  .row > {
    @include make-cell($resolution, $cell-count);
  }
}

